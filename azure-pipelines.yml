trigger:
- main

pool:
  name: 'Default'

parameters:
  - name: hostname
    type: string
    default: "127.0.0.1"
  - name: os
    type: string
    default: "windows"
    
variables:
  - name: ssh_p
    value: $(SSH_PASSWORD)

stages:
- stage: CreateInventory
  jobs:
  - job: WriteToInventory
    steps: 
    - script: echo "Message ${{ parameters.hostname}}"

    - ${{ if eq(parameters.os, 'windows') }}:
      - script: |
          echo "[windows]" >> inventory.ini
          echo "${{ parameters.hostname }}" >> inventory.ini
          echo "[windows:vars]" >> inventory.ini
          echo "ansible_user= administrator" >> inventory.ini
          echo "ansible_port= 22" >> inventory.ini
          echo "ansible_connection= ssh" >> inventory.ini

    - ${{ if eq(parameters.os, 'rhel') }}:
      - script: |
          echo "[linux]" >> inventory.ini
          echo "${{ parameters.hostname }}" >> inventory.ini
          echo "[linux:vars]" >> inventory.ini
          echo "ansible_user= administrator" >> inventory.ini
          echo "ansible_port= 22" >> inventory.ini
          echo "ansible_connection= ssh" >> inventory.ini

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'inventory.ini'
        artifact: 'inventory'
      displayName: 'Publish inventory.ini as artifact'


- stage: RunPlaybook
  jobs:
  - job: AnsiblePlaybook
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'inventory'
        path: '$(Pipeline.Workspace)'
      displayName: 'Download inventory.ini artifact'

    - script: |
        echo "Printing inventory file"
        cat "$(Pipeline.Workspace)/inventory.ini"

    - script: |
        export ANSIBLE_HOST_KEY_CHECKING=False
        ansible-playbook /home/kdsouza/Project/playbook-test.yml --e "ansible_ssh_pass=$(SSH_PASSWORD)"
      displayName: 'Running Playbook'



