---
- name: Test Windows Servers
  hosts: windows
  remote_user: administrator
  gather_facts: true

  tasks:
   - name: Ping server
     ansible.windows.win_ping:

       # The script creates its own column with HostName, then parses Name and Status from the powershell command for the other columns.    
   - name: Get all services
     ansible.windows.win_powershell:
       script: |
         Get-Service | Select-Object @{Name="HostName"; Expression= { $env:COMPUTERNAME }}, DisplayName, Name, @{  Name = "Status"; Expression= { $_.Status.ToString() } } | ConvertTo-Json -Depth 3
     register: result

#   - name: Services to Json
#     set_fact:
#       service_list: >-
#          {{
#            result.stdout_lines
#            | map('split', ',')
#            | map('zip', ['HostName','Name','Status'])
#            | list
#          }}

#   - name: Debug
#     ansible.builtin.debug:
#       var: ' {{ result.output }} '
 
   - name: Save JSON to file
     delegate_to: 127.0.0.1
     ansible.builtin.copy:
       content: "{{ result.output | join('') | from_json | to_nice_json }}"
       dest: "/home/kdsouza/Project/output/_{{ ansible_hostname }}.json"
   

- name: Test Linux Servers
  hosts: linux
  remote_user: administrator
  gather_facts: true
  tasks:
    - name: Ping server
      ansible.builtin.ping: 

    - name: Get Services`
      ansible.builtin.shell: | 
        systemctl list-units --type=service --all --full --output json --no-pager | jq --arg hostname "$HOSTNAME" 'map(. +{hostname:$hostname})'

      register: result

    - name: Save JSON to file
      delegate_to: 127.0.0.1
      ansible.builtin.copy:
        content: "{{ result.stdout | join('') | from_json | to_nice_json }}"
        dest: "/home/kdsouza/Project/output/_{{ ansible_hostname }}.json"
   
